
# ============================= Plugins ===============================

ENABLE_CORRECTION="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"
HIST_STAMPS="yyyy-mm-dd"

source ~/.zgen/zgen.zsh

if ! zgen saved; then
    echo "Creating a zgen save"

    zgen oh-my-zsh

    zgen loadall <<EOBUNDLES
        robbyrussell/oh-my-zsh plugins/atom
        robbyrussell/oh-my-zsh plugins/autopep8
        robbyrussell/oh-my-zsh plugins/cabal
        robbyrussell/oh-my-zsh plugins/colorize
        robbyrussell/oh-my-zsh plugins/command-not-found
        robbyrussell/oh-my-zsh plugins/copydir
        robbyrussell/oh-my-zsh plugins/copyfile
        robbyrussell/oh-my-zsh plugins/cp
        robbyrussell/oh-my-zsh plugins/dircycle
        robbyrussell/oh-my-zsh plugins/django
        robbyrussell/oh-my-zsh plugins/extract
        robbyrussell/oh-my-zsh plugins/gem
        robbyrussell/oh-my-zsh plugins/git
        robbyrussell/oh-my-zsh plugins/github
        robbyrussell/oh-my-zsh plugins/gitignore
        robbyrussell/oh-my-zsh plugins/gradle
        robbyrussell/oh-my-zsh plugins/history
        robbyrussell/oh-my-zsh plugins/jsontools
        robbyrussell/oh-my-zsh plugins/node
        robbyrussell/oh-my-zsh plugins/npm
        robbyrussell/oh-my-zsh plugins/pep8
        robbyrussell/oh-my-zsh plugins/pip
        robbyrussell/oh-my-zsh plugins/python
        robbyrussell/oh-my-zsh plugins/ruby
        robbyrussell/oh-my-zsh plugins/sublime
        robbyrussell/oh-my-zsh plugins/sudo
        robbyrussell/oh-my-zsh plugins/themes
        robbyrussell/oh-my-zsh plugins/vundle
        robbyrussell/oh-my-zsh plugins/web-search

        zlsun/umake
        zlsun/solarized-man

        rimraf/k
        Neki/fasd

        zsh-users/zsh-syntax-highlighting
        zsh-users/zsh-completions src
        zsh-users/zsh-history-substring-search

        # autosuggestions should be loaded last
        tarruda/zsh-autosuggestions

EOBUNDLES

    zgen load zlsun/avit-mod avit-mod

    zgen save
fi

# bind UP and DOWN arrow keys
zmodload zsh/terminfo
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down

# bind UP and DOWN arrow keys (compatibility fallback
# for Ubuntu 12.04, Fedora 21, and MacOSX 10.9 users)
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# bind P and N for EMACS mode
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down

# bind k and j for VI mode
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

# Enable autosuggestions automatically.
zle-line-init() {
    zle autosuggest-start
}
zle -N zle-line-init

# ======================== User configuration ==========================

# Functions

find_duplicate() {
    local dir=${1:-.}
    find $dir -type f -print0                   \
        | xargs -0 -n1 md5sum                   \
        | sort -k 1,32                          \
        | uniq -w 32 -d --all-repeated=separate \
        | sed -e 's/^[0-9a-f]*\ *//;'
}

top_commands() {
    cat ~/.zsh_history                                      \
        | cut -d ';' -f 2- 2>/dev/null                      \
        | awk '{a[$1]++}END{for(i in a){print a[i] " " i}}' \
        | sort -rn                                          \
        | head $*
}

fawk() {
    awk "{print \$${1}}"
}

vim_rename() {
    local dir=${1:-.}
    vim -c "cd $dir|Renamer"
}

exists() {
    type $1 &> /dev/null
}

# ZSH

autoload -U zmv

# make zsh know about hosts already accessed by SSH
zstyle -e ':completion:*:(ssh|scp|sftp|rsh|rsync):hosts' hosts 'reply=(${=${${(f)"$(cat {/etc/ssh_,~/.ssh/known_}hosts(|2)(N) /dev/null)"}%%[# ]*}//,/ })'


# Key bindings

bindkey -s '^Z' '^qfg\n'

bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char

bindkey -M menuselect 'a' vi-backward-char
bindkey -M menuselect 's' vi-down-line-or-history
bindkey -M menuselect 'w' vi-up-line-or-history
bindkey -M menuselect 'd' vi-forward-char

bindkey -M menuselect '/' accept-and-infer-next-history
bindkey -M menuselect '.' undo
bindkey -M menuselect ' ' accept-and-hold
bindkey -M menuselect ';' history-incremental-search-forward

# Aliases

EDITOR='vim'
XOPEN='xdg-open'
PLAYER='mplayer'
XPLAYER='smplayer'
BROWSER='x-www-browser'

# open file depends on their SUFFIX
if [ ${ZSH_VERSION//\./} -ge 420 ]; then
    # open browser on urls
    _browser_fts=(htm html de org net com at cx nl se dk dk php)
    for ft in $_browser_fts ; do alias -s $ft=$BROWSER ; done

    _editor_fts=(cpp cxx cc c hh h inl asc txt TXT tex)
    for ft in $_editor_fts ; do alias -s $ft=$EDITOR ; done

    _image_fts=(jpg jpeg png gif mng tiff tif xpm)
    for ft in $_image_fts ; do alias -s $ft=$XOPEN; done

    _media_fts=(ape avi flv mkv mov mp3 mpeg mpg ogg ogm rm wav webm)
    for ft in $_media_fts ; do alias -s $ft=$PLAYER ; done

    # read documents
    alias -s pdf=$XOPEN
    alias -s ps=gv
    alias -s dvi=xdvi
    alias -s chm=xchm
    alias -s djvu=djview

    # list whats inside packed file
    alias -s zip="unzip -l"
    alias -s rar="unrar l"
    alias -s tar="tar tf"
    alias -s tar.gz="echo "
    alias -s ace="unace l"
fi

# command line tail shortcuts
alias -g H='| head'
alias -g T='| tail'
alias -g G='| grep'
alias -g L="| less"
alias -g M="| most"
alias -g S='| sort'
alias -g X='| xargs'
alias -g LL="2>&1 | less"
alias -g CA="2>&1 | cat -A"
alias -g NE="2> /dev/null"
alias -g NUL="> /dev/null 2>&1"
alias -g P="2>&1| pygmentize -l pytb"

# l* - ls
alias l='ls -lFh'     #size,show type,human readable
alias la='ls -lAFh'   #long list,show almost all,show type,human readable
alias lr='ls -tRFh'   #sorted by date,recursive,show type,human readable
alias lt='ls -ltFh'   #long list,sorted by date,show type,human readable
alias ll='ls -l'      #long list
alias ldot='ls -ld .*'
alias lS='ls -1FSsh'
alias lart='ls -1Fcart'
alias lrt='ls -1Fcrt'

# k* - k <https://github.com/rimraf/k>
alias k='k -h'
alias ka='k -h -A'

# how* - howdoi <https://github.com/gleitz/howdoi>
alias howdoi='howdoi -c'
alias how='howdoi'
alias howsh='howdoi shell'
alias howpy='howdoi python'
alias howc='howdoi c'
alias howcp='howdoi c++'
alias howjv='howdoi java'
alias howml='howdoi html'
alias howjs='howdoi js'
alias howcss='howdoi css'

# py* - python
alias py='python'
alias py2='python2'
alias py3='python3'
alias pyi='sudo -H pip install'
alias pyhttp='python -m SimpleHTTPServer'
alias pyftp='python -m pyftpdlib'

# sg* - apt-*
alias sga='sudo apt-get autoremove'
alias sgc='sudo apt-get autoclean'
alias sgd='sudo apt-get dist-upgrade'
alias sgg='sudo apt-get upgrade'
alias sgi='sudo apt-get install'
alias sgp='sudo apt-get remove --purge'
alias sgr='sudo apt-get remove'
alias sgu='sudo apt-get update'
alias sgs='apt-cache search'
alias sgf='apt-file search'

# quick access to files
alias zshrc='$EDITOR ~/.zshrc'
alias vimrc='$EDITOR ~/.vimrc'
alias tmxcf='$EDITOR ~/.tmux.conf'
alias srcls='$EDITOR /etc/apt/sources.list'

# enable alias when use sudo
# http://askubuntu.com/a/22043/399470
alias s='sudo '

# shorten frequent commands
alias c='cat'
alias ec='echo'
alias fk='eval $(thefuck $(fc -ln -1))' # https://github.com/nvbn/thefuck
alias gg='git gui'
alias h='history'
alias m='make'
alias p='ps -f'
alias v='vim'

# fasd
export _FASD_VIMINFO="~/.vim/info"
export _FASD_BACKENDS="native viminfo current"
alias A='fasd -A'
alias o='fasd -a -B recently-used -e $XOPEN'

# meaning aliases
alias help='man'
alias unexport='unset'

# commands with options
alias grep='grep --color'
alias sgrep='grep -R -n -H -C 5 --exclude-dir={.git,.svn,CVS} '
alias hgrep="fc -El 0 | grep"
alias sortnr='sort -n -r'
alias dud='du -d 1 -h'
alias duf='du -sh *'
alias fd='find . -type d -name'
alias ff='find . -type f -name'

# prompt before operating file
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

alias mmv='noglob zmv -W'

# nocorrect
if [[ "$ENABLE_CORRECTION" == "true" ]]; then
    alias howdoi='nocorrect howdoi'
    alias _z='nocorrect _z'
fi

# Others

eval `dircolors ~/.dircolors`

if [[ $(tty|grep -o '/dev/tty') = /dev/tty ]] && exists fbterm; then
    exec fbterm
elif [[ ! $TERM =~ screen ]] && exists tmux; then
    # TERM=screen-256color exec tmux
fi

