
let g:bundle_groups=['general', 'writing', 'neocomplcache', 'programming',
    \'haskell', 'python', 'javascript', 'html', 'misc',]

Plugin 'gmarik/vundle'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'

if executable('ag')
    Plugin 'mileszs/ack.vim'
    let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
elseif executable('ack-grep')
    let g:ackprg="ack-grep -H --nocolor --nogroup --column"
    Plugin 'mileszs/ack.vim'
elseif executable('ack')
    Plugin 'mileszs/ack.vim'
endif

if count(g:bundle_groups, 'general')
    Plugin 'altercation/vim-colors-solarized'
    Plugin 'flazz/vim-colorschemes'

    Plugin 'bling/vim-airline'
    Plugin 'bling/vim-bufferline'
    Plugin 'Yggdroot/indentLine'
    Plugin 'mhinz/vim-signify'

    Plugin 'ctrlpvim/ctrlp.vim'
    Plugin 'tacahiroy/ctrlp-funky'

    Plugin 'vim-scripts/sessionman.vim'
    Plugin 'vim-scripts/restore_view.vim'

    Plugin 'scrooloose/nerdtree'
    Plugin 'Xuyuanp/nerdtree-git-plugin'
    Plugin 'jistr/vim-nerdtree-tabs'

    Plugin 'mbbill/undotree'

    Plugin 'Lokaltog/vim-easymotion'
    Plugin 'kristijanhusak/vim-multiple-cursors'

    Plugin 'tpope/vim-surround'
    Plugin 'tpope/vim-repeat'
    Plugin 'spf13/vim-autoclose'
    Plugin 'Firef0x/matchit.zip'

    Plugin 'tpope/vim-abolish'
    Plugin 'osyo-manga/vim-over'

    Plugin 'kana/vim-textobj-user'
    Plugin 'kana/vim-textobj-indent'
    Plugin 'gcmt/wildfire.vim'
endif

if count(g:bundle_groups, 'writing')
    Plugin 'reedes/vim-litecorrect'
    Plugin 'reedes/vim-textobj-sentence'
    Plugin 'reedes/vim-textobj-quote'
    Plugin 'reedes/vim-wordy'
    Plugin 'tpope/vim-markdown'
    Plugin 'suan/vim-instant-markdown'
endif

if count(g:bundle_groups, 'programming')
    " Pick one of the checksyntax, jslint, or syntastic
    Plugin 'scrooloose/syntastic'
    Plugin 'tpope/vim-fugitive'
    Plugin 'mattn/webapi-vim'
    Plugin 'mattn/gist-vim'
    Plugin 'scrooloose/nerdcommenter'
    Plugin 'tpope/vim-commentary'
    Plugin 'tpope/vim-endwise'
    Plugin 'godlygeek/tabular'
    if executable('ctags')
        Plugin 'majutsushi/tagbar'
    endif
endif

if count(g:bundle_groups, 'snipmate')
    Plugin 'garbas/vim-snipmate'
    Plugin 'honza/vim-snippets'
    " Source support_function.vim to support vim-snippets.
    if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
        source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
    endif
elseif count(g:bundle_groups, 'youcompleteme')
    Plugin 'Valloric/YouCompleteMe'
    Plugin 'SirVer/ultisnips'
    Plugin 'honza/vim-snippets'
elseif count(g:bundle_groups, 'neocomplcache')
    Plugin 'Shougo/neocomplcache'
    Plugin 'Shougo/neosnippet'
    Plugin 'Shougo/neosnippet-snippets'
    Plugin 'honza/vim-snippets'
elseif count(g:bundle_groups, 'neocomplete')
    Plugin 'Shougo/neocomplete.vim.git'
    Plugin 'Shougo/neosnippet'
    Plugin 'Shougo/neosnippet-snippets'
    Plugin 'honza/vim-snippets'
endif

if count(g:bundle_groups, 'python')
    " Pick either python-mode or pyflakes & pydoc
    Plugin 'klen/python-mode'
    Plugin 'yssource/python.vim'
    Plugin 'python_match.vim'
    Plugin 'pythoncomplete'
endif

if count(g:bundle_groups, 'html')
    Plugin 'amirh/HTML-AutoCloseTag'
    Plugin 'hail2u/vim-css3-syntax'
    " Plugin 'gorodinskiy/vim-coloresque'
    Plugin 'tpope/vim-haml'
endif

if count(g:bundle_groups, 'javascript')
    Plugin 'elzr/vim-json'
    Plugin 'groenewege/vim-less'
    Plugin 'pangloss/vim-javascript'
    Plugin 'briancollins/vim-jst'
    Plugin 'kchmck/vim-coffee-script'
endif

if count(g:bundle_groups, 'haskell')
    Plugin 'travitch/hasksyn'
    Plugin 'dag/vim2hs'
    Plugin 'Twinside/vim-haskellConceal'
    Plugin 'Twinside/vim-haskellFold'
    Plugin 'lukerandall/haskellmode-vim'
    Plugin 'eagletmt/neco-ghc'
    Plugin 'eagletmt/ghcmod-vim'
    Plugin 'Shougo/vimproc'
    Plugin 'adinapoli/cumino'
    Plugin 'bitc/vim-hdevtools'
endif

if count(g:bundle_groups, 'scala')
    Plugin 'derekwyatt/vim-scala'
    Plugin 'derekwyatt/vim-sbt'
    Plugin 'xptemplate'
endif

if count(g:bundle_groups, 'ruby')
    Plugin 'tpope/vim-rails'
    let g:rubycomplete_buffer_loading = 1
    "let g:rubycomplete_classes_in_global = 1
    "let g:rubycomplete_rails = 1
endif

if count(g:bundle_groups, 'go')
    "Plugin 'Blackrush/vim-gocode'
    Plugin 'fatih/vim-go'
endif

if count(g:bundle_groups, 'puppet')
    Plugin 'rodjek/vim-puppet'
endif

if count(g:bundle_groups, 'elixir')
    Plugin 'elixir-lang/vim-elixir'
    Plugin 'carlosgaldino/elixir-snippets'
    Plugin 'mattreduce/vim-mix'
endif

if count(g:bundle_groups, 'misc')
    Plugin 'xolox/vim-misc'
    Plugin 'xolox/vim-session'
    Plugin 'lilydjwg/fcitx.vim'
    Plugin 'szw/vim-g'
    Plugin 'gioele/vim-autoswap'
    Plugin 'DrawIt'
endif

