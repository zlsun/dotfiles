
# Options

unsetopt menu_complete   # do not autoselect the first completion entry
unsetopt flowcontrol
setopt auto_menu         # show completion menu on succesive tab press
setopt complete_in_word
setopt always_to_end
setopt auto_cd
setopt multios
setopt cdablevars
setopt prompt_subst

zmodload -i zsh/complist
autoload -U colors && colors
autoload -U zmv

# Theme

# ls colors
eval `dircolors ~/.dircolors`
ls --color -d . &>/dev/null 2>&1 && alias ls='ls --color=tty' || alias ls='ls -G'

local _user="%{$fg[red]%}%n@%m%{$reset_color%} "
local _wd="%{$fg[blue]%}%8~%{$reset_color%} "
local _jobs="%{$fg[cyan]%}%(1j. ⚙ %j.)%{$reset_color%}"
local _return="%{$fg[red]%}%(?..↵ %?)%{$reset_color%}"

PROMPT="╭─${_user}${_wd}
╰─▶ "
PROMPT2="  ▶ "
RPROMPT="${_return}${_jobs}"

# Completion

## case-insensitive (all),partial-word and then substring completion
if [ "x$CASE_SENSITIVE" = "xtrue" ]; then
  zstyle ':completion:*' matcher-list 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
  unset CASE_SENSITIVE
else
  if [ "x$HYPHEN_INSENSITIVE" = "xtrue" ]; then
    zstyle ':completion:*' matcher-list 'm:{a-zA-Z-_}={A-Za-z_-}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
    unset HYPHEN_INSENSITIVE
  else
    zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
  fi
fi

zstyle ':completion:*' list-colors ''

# should this be in keybindings?
bindkey -M menuselect '^o' accept-and-infer-next-history

zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'
zstyle ':completion:*:*:*:*:processes' command "ps -u $USER -o pid,user,comm -w -w"

# disable named-directories autocompletion
zstyle ':completion:*:cd:*' tag-order local-directories directory-stack path-directories

# Use caching so that commands like apt and dpkg complete are useable
zstyle ':completion::complete:*' use-cache 1
zstyle ':completion::complete:*' cache-path $ZSH_CACHE_DIR

# Don't complete uninteresting users
zstyle ':completion:*:*:*:users' ignored-patterns \
        adm amanda apache at avahi avahi-autoipd beaglidx bin cacti canna \
        clamav daemon dbus distcache dnsmasq dovecot fax ftp games gdm \
        gkrellmd gopher hacluster haldaemon halt hsqldb ident junkbust kdm \
        ldap lp mail mailman mailnull man messagebus  mldonkey mysql nagios \
        named netdump news nfsnobody nobody nscd ntp nut nx obsrun openvpn \
        operator pcap polkitd postfix postgres privoxy pulse pvm quagga radvd \
        rpc rpcuser rpm rtkit scard shutdown squid sshd statd svn sync tftp \
        usbmux uucp vcsa wwwrun xfs '_*'

zstyle '*' single-ignored show

# make zsh know about hosts already accessed by SSH
zstyle -e ':completion:*:(ssh|scp|sftp|rsh|rsync):hosts' hosts 'reply=(${=${${(f)"$(cat {/etc/ssh_,~/.ssh/known_}hosts(|2)(N) /dev/null)"}%%[# ]*}//,/ })'

# Key bindings

bindkey -s '^Z' '^q fg\n'

bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char

bindkey -M menuselect 'a' vi-backward-char
bindkey -M menuselect 's' vi-down-line-or-history
bindkey -M menuselect 'w' vi-up-line-or-history
bindkey -M menuselect 'd' vi-forward-char

bindkey -M menuselect '/' accept-and-infer-next-history
bindkey -M menuselect '.' undo
bindkey -M menuselect ' ' accept-and-hold
bindkey -M menuselect ';' history-incremental-search-forward

# Functions

find-duplicate() {
    local dir=${1:-.}
    find $dir -type f -print0                   \
        | xargs -0 -n1 md5sum                   \
        | sort -k 1,32                          \
        | uniq -w 32 -d --all-repeated=separate \
        | sed -e 's/^[0-9a-f]*\ *//;'
}

top-commands() {
    cat ~/.zsh_history                                      \
        | cut -d ';' -f 2- 2>/dev/null                      \
        | awk '{a[$1]++}END{for(i in a){print a[i] " " i}}' \
        | sort -rn                                          \
        | head $*
}

save-rm-rf() {
    comm -23 <(pacman -Qeq) <(pacman -Qmq) | pacman -S -
    comm -23 <(pacman -Qdq) <(pacman -Qmq) | pacman -S --asdeps -
}

bgit() {
    local color='\e[1;31m'
    local reset='\e[0m'
    local echo_cmd="echo -e '${color}[{}]$reset'"
    local git_cmd="git --git-dir={}/.git --work-tree={} $*"
    printf "%s\n" */ | cut -d'/' -f1 | xargs -I '{}' sh -c "$echo_cmd && $git_cmd"
}

fawk() {
    awk "{print \$${1}}"
}

vimrename() {
    local dir=${1:-.}
    vim -c "cd $dir|Renamer"
}

exists() {
    type $1 &> /dev/null
}

# Aliases

EDITOR=vim
XOPEN=gvfs-open
BROWSER=$XOPEN

# open file depends on their SUFFIX
if [ ${ZSH_VERSION//\./} -ge 420 ]; then
    # open browser on urls
    _browser_fts=(htm html de org net com at cx nl se dk dk php)
    for ft in $_browser_fts ; do alias -s $ft=$XOPEN ; done

    _editor_fts=(asc c cc cpp cxx h hh ini tex txt TXT)
    for ft in $_editor_fts ; do alias -s $ft=$EDITOR ; done

    _image_fts=(bmp gif jpg jpeg mng png tif tiff xpm)
    _media_fts=(ape avi flv mkv mov mp3 mpeg mpg ogg ogm rm wav webm)
    _doc_fts=(pdf doc docx xls xlsx ppt ps dvi chm djvu)
    for ft in $_image_fts $_media_fts $_doc_fts ; do alias -s $ft=$XOPEN ; done

    # list whats inside packed file
    alias -s zip="unzip -l"
    alias -s rar="unrar l"
    alias -s tar="tar tf"
    alias -s tar.gz="echo "
    alias -s ace="unace l"
fi

# command line tail shortcuts
alias -g G='| grep'
alias -g H='| head'
alias -g L="| less"
alias -g M="| most"
alias -g S='| sort'
alias -g T='| tail'
alias -g U='| uniq'
alias -g X='| xargs'
alias -g WC='| wc'
alias -g LL="2>&1 | less"
alias -g CA="2>&1 | cat -A"
alias -g NE="2> /dev/null"
alias -g NUL="> /dev/null 2>&1"
alias -g P="2>&1| pygmentize -l pytb"

# l* -> ls
alias l='ls -lFh'     # size,show type,human readable
alias la='ls -lAFh'   # long list,show almost all,show type,human readable
alias lr='ls -tRFh'   # sorted by date,recursive,show type,human readable
alias lt='ls -ltFh'   # long list,sorted by date,show type,human readable
alias ll='ls -l'      # long list
alias ldot='ls -ld .*'
alias lS='ls -1FSsh'
alias lart='ls -1Fcart'
alias lrt='ls -1Fcrt'

# k* -> k <https://github.com/rimraf/k>
alias k='k -h'
alias ka='k -h -A'

# how* -> howdoi <https://github.com/gleitz/howdoi>
alias howdoi='howdoi -c'
alias how='howdoi'
alias howc='howdoi c'
alias howcp='howdoi c++'
alias howcss='howdoi css'
alias howjs='howdoi js'
alias howjv='howdoi java'
alias howml='howdoi html'
alias howpy='howdoi python'
alias howsh='howdoi shell'

# py* -> python
alias py='python'
alias py2='python2'
alias py3='python3'
alias pyi='sudo -H pip install'
alias pyi2='sudo -H pip2 install'
alias pyi3='sudo -H pip3 install'
alias pyiu='pip install --user'
alias pyiu2='pip2 install --user'
alias pyiu3='pip3 install --user'
alias pyu='sudo -H pip uninstall'
alias pyu2='sudo -H pip2 uninstall'
alias pyu3='sudo -H pip3 uninstall'
alias pyftp='python -m pyftpdlib'
alias pyhttp='python -m SimpleHTTPServer'
alias pypf='python -m cProfile'
alias pypf2='python2 -m cProfile'
alias pypf3='python3 -m cProfile'
alias pytime='python -m timeit'
alias pytime2='python2 -m timeit'
alias pytime3='python3 -m timeit'
alias pytrace='python -m trace'
alias pytrace2='python2 -m trace'
alias pytrace3='python3 -m trace'
alias pypdb='python -m pdb'
alias pypdb2='python2 -m pdb'
alias pypdb3='python3 -m pdb'
alias ipy='ipython'
alias ipy2='ipython2'
alias ipy3='ipython3'
alias iqt='ipython qtconsole'
alias iqt2='ipython2 qtconsole'
alias iqt3='ipython3 qtconsole'
alias nb='ipython notebook'
alias nb2='ipython2 notebook'
alias nb3='ipython3 notebook'

# sg* -> apt-*
alias sga='sudo apt-get autoremove'
alias sgc='sudo apt-get autoclean'
alias sgd='sudo apt-get dist-upgrade'
alias sgg='sudo apt-get upgrade'
alias sgi='sudo apt-get install'
alias sgp='sudo apt-get remove --purge'
alias sgr='sudo apt-get remove'
alias sgu='sudo apt-get update'
alias sgs='apt-cache search'
alias sgf='apt-file search'

# sp* -> pacman
alias spd='sudo pacman -D'
alias spt='sudo pacman -T'
alias spq='sudo pacman -Q'
alias spr='sudo pacman -R'
alias sps='sudo pacman -S'
alias spu='sudo pacman -U'

# yt* -> yaourt
alias ytq='yaourt -Q'
alias ytr='yaourt -R'
alias yts='yaourt -S'
alias ytu='yaourt -U'
alias ytc='yaourt -C'
alias ytb='yaourt -B'
alias ytg='yaourt -G'
alias ytt='yaourt --stats'

# quick access to files
alias srcls='$EDITOR /etc/apt/sources.list'
alias pcmcf='$EDITOR /etc/pacman.conf'
alias tmxcf='$EDITOR ~/.tmux.conf'
alias vimrc='$EDITOR ~/.vimrc'
alias zshrc='$EDITOR ~/.zshrc'
alias i3cfg='$EDITOR ~/.i3/config'

# enable alias when use sudo
# http://askubuntu.com/a/22043/399470
alias s='sudo '

# shorten frequent commands
alias c='cat'
alias ec='echo'
alias fk='eval $(thefuck $(fc -ln -1))' # https://github.com/nvbn/thefuck
alias gg='git gui'
alias h='history'
alias m='make'
alias sv='s v'
alias v='vim'

# fasd
export _FASD_VIMINFO="~/.vim/info"
export _FASD_BACKENDS="native viminfo current"
alias A='fasd -A'
alias D='fasd -D'
alias o='fasd -a -B recently-used -e $XOPEN'

# meaning aliases
alias help='man'
alias unexport='unset'

# commands with options
alias grep='grep --color'
alias sgrep='grep -R -n -H -C 5 --exclude-dir={.git,.svn,CVS} '
alias hgrep="fc -El 0 | grep"
alias sortnr='sort -n -r'
alias dud='du -d 1 -h'
alias duf='du -sh *'
alias fd='noglob find . -type d -name'
alias ff='noglob find . -type f -name'

# prompt before operating file
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

alias mmv='noglob zmv -W'

