
" ==============================================================================
" Bundles
" ==============================================================================

let g:bundle_groups=['general', 'writing', 'neocomplcache',
            \'programming', 'haskell', 'python', 'javascript', 'html', 'misc',]

Bundle 'gmarik/vundle'
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'tomtom/tlib_vim'
if executable('ag')
    Bundle 'mileszs/ack.vim'
    let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
elseif executable('ack-grep')
    let g:ackprg="ack-grep -H --nocolor --nogroup --column"
    Bundle 'mileszs/ack.vim'
elseif executable('ack')
    Bundle 'mileszs/ack.vim'
endif

if count(g:bundle_groups, 'general')
    Bundle 'scrooloose/nerdtree'
    Bundle 'altercation/vim-colors-solarized'
    Bundle 'spf13/vim-colors'
    Bundle 'tpope/vim-surround'
    Bundle 'tpope/vim-repeat'
    Bundle 'spf13/vim-autoclose'
    Bundle 'ctrlpvim/ctrlp.vim'
    Bundle 'tacahiroy/ctrlp-funky'
    Bundle 'kristijanhusak/vim-multiple-cursors'
    Bundle 'vim-scripts/sessionman.vim'
    Bundle 'matchit.zip'
    Bundle 'bling/vim-airline'
    Bundle 'bling/vim-bufferline'
    Bundle 'Lokaltog/vim-easymotion'
    Bundle 'jistr/vim-nerdtree-tabs'
    Bundle 'flazz/vim-colorschemes'
    Bundle 'mbbill/undotree'
    Bundle 'nathanaelkane/vim-indent-guides'
    Bundle 'vim-scripts/restore_view.vim'
    Bundle 'mhinz/vim-signify'
    Bundle 'tpope/vim-abolish.git'
    Bundle 'osyo-manga/vim-over'
    Bundle 'kana/vim-textobj-user'
    Bundle 'kana/vim-textobj-indent'
    Bundle 'gcmt/wildfire.vim'
endif

if count(g:bundle_groups, 'writing')
    Bundle 'reedes/vim-litecorrect'
    Bundle 'reedes/vim-textobj-sentence'
    Bundle 'reedes/vim-textobj-quote'
    Bundle 'reedes/vim-wordy'
endif

if count(g:bundle_groups, 'programming')
    " Pick one of the checksyntax, jslint, or syntastic
    Bundle 'scrooloose/syntastic'
    Bundle 'tpope/vim-fugitive'
    Bundle 'mattn/webapi-vim'
    Bundle 'mattn/gist-vim'
    Bundle 'scrooloose/nerdcommenter'
    Bundle 'tpope/vim-commentary'
    Bundle 'godlygeek/tabular'
    if executable('ctags')
        Bundle 'majutsushi/tagbar'
    endif
endif

if count(g:bundle_groups, 'snipmate')
    Bundle 'garbas/vim-snipmate'
    Bundle 'honza/vim-snippets'
    " Source support_function.vim to support vim-snippets.
    if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
        source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
    endif
elseif count(g:bundle_groups, 'youcompleteme')
    Bundle 'Valloric/YouCompleteMe'
    Bundle 'SirVer/ultisnips'
    Bundle 'honza/vim-snippets'
elseif count(g:bundle_groups, 'neocomplcache')
    Bundle 'Shougo/neocomplcache'
    Bundle 'Shougo/neosnippet'
    Bundle 'Shougo/neosnippet-snippets'
    Bundle 'honza/vim-snippets'
elseif count(g:bundle_groups, 'neocomplete')
    Bundle 'Shougo/neocomplete.vim.git'
    Bundle 'Shougo/neosnippet'
    Bundle 'Shougo/neosnippet-snippets'
    Bundle 'honza/vim-snippets'
endif

if count(g:bundle_groups, 'php')
    Bundle 'spf13/PIV'
    Bundle 'arnaud-lb/vim-php-namespace'
    Bundle 'beyondwords/vim-twig'
endif

if count(g:bundle_groups, 'python')
    " Pick either python-mode or pyflakes & pydoc
    Bundle 'klen/python-mode'
    Bundle 'yssource/python.vim'
    Bundle 'python_match.vim'
    Bundle 'pythoncomplete'
endif

if count(g:bundle_groups, 'javascript')
    Bundle 'elzr/vim-json'
    Bundle 'groenewege/vim-less'
    Bundle 'pangloss/vim-javascript'
    Bundle 'briancollins/vim-jst'
    Bundle 'kchmck/vim-coffee-script'
endif

if count(g:bundle_groups, 'scala')
    Bundle 'derekwyatt/vim-scala'
    Bundle 'derekwyatt/vim-sbt'
    Bundle 'xptemplate'
endif

if count(g:bundle_groups, 'haskell')
    Bundle 'travitch/hasksyn'
    Bundle 'dag/vim2hs'
    Bundle 'Twinside/vim-haskellConceal'
    Bundle 'Twinside/vim-haskellFold'
    Bundle 'lukerandall/haskellmode-vim'
    Bundle 'eagletmt/neco-ghc'
    Bundle 'eagletmt/ghcmod-vim'
    Bundle 'Shougo/vimproc'
    Bundle 'adinapoli/cumino'
    Bundle 'bitc/vim-hdevtools'
endif

if count(g:bundle_groups, 'html')
    Bundle 'amirh/HTML-AutoCloseTag'
    Bundle 'hail2u/vim-css3-syntax'
    Bundle 'gorodinskiy/vim-coloresque'
    Bundle 'tpope/vim-haml'
endif

if count(g:bundle_groups, 'ruby')
    Bundle 'tpope/vim-rails'
    let g:rubycomplete_buffer_loading = 1
    "let g:rubycomplete_classes_in_global = 1
    "let g:rubycomplete_rails = 1
endif

if count(g:bundle_groups, 'puppet')
    Bundle 'rodjek/vim-puppet'
endif

if count(g:bundle_groups, 'go')
    "Bundle 'Blackrush/vim-gocode'
    Bundle 'fatih/vim-go'
endif

if count(g:bundle_groups, 'elixir')
    Bundle 'elixir-lang/vim-elixir'
    Bundle 'carlosgaldino/elixir-snippets'
    Bundle 'mattreduce/vim-mix'
endif

if count(g:bundle_groups, 'misc')
    Bundle 'rust-lang/rust.vim'
    Bundle 'tpope/vim-markdown'
    Bundle 'spf13/vim-preview'
    Bundle 'tpope/vim-cucumber'
    Bundle 'cespare/vim-toml'
    Bundle 'quentindecock/vim-cucumber-align-pipes'
    Bundle 'saltstack/salt-vim'
endif

Bundle 'DrawIt'
Bundle 'xolox/vim-misc'
Bundle 'xolox/vim-session'

